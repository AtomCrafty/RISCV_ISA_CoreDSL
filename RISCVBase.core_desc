InstructionSet RISCVBase {
    architectural_state {
        unsigned RFS=32;
        unsigned XLEN;
        unsigned CSR_SIZE=4096;
        unsigned INSTR_ALIGNMENT=4;
        unsigned fence=0;
        unsigned fencei=1;
        unsigned fencevmal=2;
        unsigned fencevmau=3;

        // core registers
        register unsigned<XLEN>  X[RFS];
        register unsigned<XLEN>  PC [[is_pc]];
        // register aliases
        unsigned<XLEN>& ZERO = X[0];
        unsigned<XLEN>& RA   = X[1];
        unsigned<XLEN>& SP   = X[2];
        unsigned<XLEN>& GP   = X[3];
        unsigned<XLEN>& TP   = X[4];
        unsigned<XLEN>& T0   = X[5];
        unsigned<XLEN>& T1   = X[6];
        unsigned<XLEN>& T2   = X[7];
        unsigned<XLEN>& S0   = X[8];
        unsigned<XLEN>& S1   = X[9];
        unsigned<XLEN>& A0   = X[10];
        unsigned<XLEN>& A1   = X[11];
        unsigned<XLEN>& A2   = X[12];
        unsigned<XLEN>& A3   = X[13];
        unsigned<XLEN>& A4   = X[14];
        unsigned<XLEN>& A5   = X[15];
        unsigned<XLEN>& A6   = X[16];
        unsigned<XLEN>& A7   = X[17];
        unsigned<XLEN>& S2   = X[18];
        unsigned<XLEN>& S3   = X[19];
        unsigned<XLEN>& S4   = X[20];
        unsigned<XLEN>& S5   = X[21];
        unsigned<XLEN>& S6   = X[22];
        unsigned<XLEN>& S7   = X[23];
        unsigned<XLEN>& S8   = X[24];
        unsigned<XLEN>& S9   = X[25];
        unsigned<XLEN>& S10  = X[26];
        unsigned<XLEN>& S11  = X[27];
        unsigned<XLEN>& T3   = X[28];
        unsigned<XLEN>& T4   = X[29];
        unsigned<XLEN>& T5   = X[30];
        unsigned<XLEN>& T6   = X[31];
        // address spaces
        extern char           MEM[1<<XLEN];
        extern unsigned<XLEN> CSR[1<<CSR_SIZE];
        extern unsigned<XLEN> FENCE[8];
        extern char RES[8]; // reservation address space
        // supplemental state register
        register unsigned<3>    PRIV=3;
        register unsigned<XLEN> DPC=0;
    }

    functions {
    	extern void raise(int irq, int mcause);
    	extern void leave(int priv_lvl);
    	extern void wait(int flag);
    }
}

InstructionSet RISCVFBase extends RISCVBase{
    architectural_state {
        unsigned FLEN;
        unsigned FFLAG_MASK = 0x1f;

        unsigned<FLEN> F[32];
        unsigned<32> FCSR;
    }    
    functions {
        extern unsigned fadd_s(unsigned, unsigned, unsigned char);
        extern unsigned fsub_s(unsigned, unsigned, unsigned char);
        extern unsigned fmul_s(unsigned, unsigned, unsigned char);
        extern unsigned fdiv_s(unsigned, unsigned, unsigned char);
        extern unsigned fmadd_s(unsigned, unsigned, unsigned, unsigned, unsigned char);
        extern unsigned fsel_s(unsigned, unsigned, unsigned);
        extern unsigned fsqrt_s(unsigned, unsigned char);
        extern unsigned fcmp_s(unsigned, unsigned, unsigned);
        extern unsigned fcvt_s(unsigned, unsigned, unsigned char);
        extern unsigned long fcvt_32_64(unsigned, unsigned, unsigned char);
        extern unsigned long fcvt_64_32(unsigned, unsigned, unsigned char);
        extern unsigned unbox_s(unsigned long);
        extern unsigned fclass_s(unsigned);
        extern unsigned fget_flags();
    }
}
